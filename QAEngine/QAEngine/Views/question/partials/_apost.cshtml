@model Jugnoon.qa.Models.AccountqaModelView
@inject IStringLocalizer<GeneralResource> GeneralResource
@inject IStringLocalizer<qaResource> qaResource
@{
    if (Model.EditMode)
    {
        ViewBag.title = qaResource["_edit_answer"].Value;
    }
}

@if (Model.Message != null && Model.Message != "")
{
    @Html.Raw(Alerts.Prepare(Model.Message, Model.AlertType));
}

@if (Model.isAllowed)
{
    if (Model.isClosed == 0)
    {
        <h4 class="mt30 mb10">
            @Model.HeadingTitle
        </h4>

        using (Html.BeginForm("post", "question", FormMethod.Post, new { }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.UserName)
            @Html.HiddenFor(m => m.AuthorUserName)
            @Html.HiddenFor(m => m.Answers)
            @Html.HiddenFor(m => m.Aid)
            @Html.HiddenFor(m => m.Qid)
            @Html.HiddenFor(m => m.EditMode)
            @Html.HiddenFor(m => m.Title)
            <div class="form-group">
                @Html.TextAreaFor(model => model.Content, new { @id = "editor1", @class = "form-control", @rows = "8", placeholder = qaResource["Writeanswerhere"].Value })
                @Html.ValidationMessageFor(m => m.Content)
            </div>

            <button class="btn-primary">
                @qaResource["Postanswer"].Value
            </button>
        }
    }
}

@section Scripts {

}
