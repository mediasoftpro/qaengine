@inject IStringLocalizer<GeneralResource> GeneralResource
@inject IStringLocalizer<qaResource> qaResource
@model Jugnoon.qa.Models.QuestionViewModel
@{
    // activate qa tabs
    ViewBag.qaTabCss = "active";
    // setup search with qa
    ViewBag.SearchType = 4;

    var _bModel = new List<BreadItem>();
    _bModel.Add(new BreadItem()
    {
        title = GeneralResource["_home"].Value,
        url = Config.GetUrl()
    });
    _bModel.Add(new BreadItem()
    {
        title = qaResource["_questions"].Value,
        url = Config.GetUrl("qa/")
    });

    /* _bModel.Add(new BreadItem()
     {
         title = ViewBag.title,
         isActive = true
     }); */

    var BreadCrumbViewModel = new BreadViewModel()
    {
        BreadItems = _bModel
    };
}
<partial name="~/Views/Shared/_BreadCrumb.cshtml" model="BreadCrumbViewModel" />
<div class="row">
    <div class="col-md-12">

        <div id="msg"></div>


        <div class="row">
            <div class="col-md-8">
                @if (Model.isAllowed)
                {
                    var InfoViewPath = "~/Views/question/partials/_info.cshtml";
                    var ActionViewPath = "~/Views/question/partials/_action.cshtml";
                    var ANSViewPath = "~/Views/question/partials/_ans.cshtml";
                    var PostViewPath = "~/Views/question/partials/_post.cshtml";
                    if (Model.Message != null && Model.Message != "")
                    {
                        @Html.Raw(Alerts.Prepare(Model.Message, Model.AlertType));
                    }
                    @await Html.PartialAsync(InfoViewPath, Model.Info)
                    @await Html.PartialAsync(ActionViewPath, Model.Action)
                    @await Html.PartialAsync(ANSViewPath, Model.Ans)
                    @await Html.PartialAsync(PostViewPath, Model.aPost)
                }
                else
                {
                    <div class="card m-b-20">
                        @await Html.PartialAsync("~/Views/partials/utility/_norecord.cshtml",
                       new NoRecordModelView()
                       { Message = Model.DetailMessage })
                    </div>
                    @await Html.PartialAsync("~/views/qa/partials/_smList01.cshtml", new Jugnoon.qa.Models.qaListViewModel()
                    {
                        BrowseText = GeneralResource["_see_all"].Value,
                        HeadingTitle = qaResource["_more_questions"].Value,
                        ListObject = new Jugnoon.Scripts.ListItems()
                        {
                            TitleLength = 0,
                            showUser = false,
                            showDate = true,
                            ItemType = ItemType.Div,
                            ListType = ListType.Grid,
                            ColWidth = "col-md-4 col-sm-6 col-xs-12",
                            isHover = true
                        },
                        BrowseUrl = Config.GetUrl("qa/"),
                        QueryOptions = new Jugnoon.qa.QAEntity()
                        {
                            order = "qa.created_at desc",
                            ispublic = true,
                            iscache = false,
                            isfeatured = FeaturedTypes.All,
                            pagesize = 6
                        }
                    })
                }

            </div>
            <div class="col-md-4">
                @await Html.PartialAsync("~/Views/qa/partials/_Nav.cshtml", new Jugnoon.qa.Models.qaNavViewModel()
           {
               hideAds = false,
               hideSearch = false,
               hideArchives = true,
               hideCategories = false,
               hideTags = false,
               searchTitle = GeneralResource["_search"].Value,
               searchAction = "/qa/queryresult",
               searchPlaceHolder = GeneralResource["_search"].Value,
               Path = "qa/"
           })
            </div>
        </div>


    </div>

</div>

@section Styles {
    @await Html.PartialAsync("~/views/shared/styles/wysibb.cshtml")
}

@section Scripts {
    @await Html.PartialAsync("~/views/shared/scripts/wysibb.cshtml")
    <script>
        $(function () {

            var textarea = document.getElementById('editor1');
            sceditor.create(textarea, {
                format: 'bbcode',
                toolbar: 'bold,italic,underline|font,size,color|bulletlist,orderedlist,quote|code,link,image',
            });

            $(".actionbar").on({
                click: function (e) {
                    var path =$(this).data("path");
                    var param = $(this).data("param");
                    var dest = $(this).data("destination");
                    Processvotes(path, param, 0, '#' + dest);
                    return false;
                }
            }, '.likeactv2');

            $(".actionbar").on({
                click: function (e) {
                    var path = $(this).data("path");
                    var param = $(this).data("param");
                    var dest = $(this).data("destination");
                    Processvotes(path, param, 1, '#' + dest);
                    return false;
                }
            }, '.dislikeactv2');


            $(".actionbar").on({
                click: function (e) {
                    var path = $(this).data("path");
                    var params = $(this).data("param");
                    var id = $(this).data("destination");
                    $(this).addClass("btn-success");
                    ActProcess(path, params, "#" + id);
                    return false;
                }
            }, '.bansact');

            $(".actionbar").on({
                click: function (e) {
                    var path = $(this).data("path");
                    var params = $(this).data("param");
                    var id = $(this).data("destination");
                    $(this).removeClass("btn-success");
                    ActProcess(path, params, "#" + id);
                    return false;
                }
            }, '.ubansact');

            $(".actionbar").on({
                click: function (e) {

                    var path = $(this).data("path");
                    console.log(path);
                    var params = $(this).data("param");
                    var id = $(this).data("destination");
                    console.log(id);
                    ActProcess(path, params, "#" + id);
                    return false;
                }
            }, '.dans');

            $(".actionbar").on({
                click: function (e) {
                    var id = $(this).data("destination");
                    Display_Message('#' + id, "Please <strong><a href='@Config.GetUrl("login")'>Sign In</a> or <strong><a href='@Config.GetUrl("signup")'>Sign Up</a> to complete this action!", 0);
                    return false;
                }
            }, '.nologincss');

            $(".actionbar").on({
                click: function (e) {
                    var path = $(this).data("path");
                    var params = $(this).data("param");
                    var id = $(this).data("destination");
                    ActProcess(path, params, "#" + id);
                    return false;
                }
            }, '.flagactv2');

            $(".actionbar").on({
                click: function (e) {
                    var path = $(this).data("path");
                    var params = $(this).data("param");
                    var id = $(this).data("destination");
                    FlagP(path, params, "#" + id);
                    return false;
                }
            }, '.flag_sbt');

            $(".actionbar").on({
                click: function (e) {
                    var path = $(this).data("path");
                    var params = $(this).data("param");
                    var id = $(this).data("destination");
                    ActProcess(path, params, "#" + id);
                    return false;
                }
            }, '.favactv2');

            $(".actionbar").on({
                click: function (e) {
                    var path = $(this).data("path");
                    var params = $(this).data("param");
                    var id = $(this).data("destination");
                    ActProcess(path, params, "#" + id);
                    return false;
                }
            }, '.ishare');
        });

        function Processvotes(handler, params, action, act) {
            $(act).html("loading...");
            params = params + "&act=" + action;
            Process_Req(handler, params, act, 'GET');
            $(act).show();
        }
    </script>

}
